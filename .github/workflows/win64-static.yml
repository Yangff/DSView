name: Build Windows 64bit-Static
on:
  push:
    branches: [ master, action ]
  pull_request:
    branches: [ master, action ]
jobs:
  build:
    name: Build
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Install MSYS
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: MINGW64
          install: >-
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-libusb
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-boost
            mingw-w64-x86_64-python
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-qt5-static
            mingw-w64-x86_64-glib2
            mingw-w64-x86_64-fftw
            mingw-w64-x86_64-zlib
            liblzma
            liblzma-devel
            mingw-w64-x86_64-lcms2
            curl
            unzip
      - uses: actions/checkout@v3
      - name: Get Python Version
        id: get-python-version
        run: |
          echo "python-version=$(python -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}')")" > $GITHUB_OUTPUT
      - name: Fetch python embed, unzip to ./python
        run: |
          curl -L https://www.python.org/ftp/python/${{ steps.get-python-version.outputs.python-version }}/python-${{ steps.get-python-version.outputs.python-version }}-embed-amd64.zip -o python-embed.zip
          mkdir python
          unzip -q python-embed.zip -d python
      - name: Build
        run: |
          mkdir build
          mkdir install.dir
          cd build
          QTDIR=/mingw64/qt5-static cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=../install.dir
          ninja
          ninja install
      - name: Package
        run: .github/package-static.sh
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: DSView-Windows-64bit
          path: package/